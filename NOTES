collatz:
    1{d2%(3*1+:2/)}
fibonacci:
    2{d1>(1-d2@s1-2@+)}
var program = "[d2 0[+oo/o*rso=(s1 0:s2+d4=(1-)ood*>0s)](s)0*+oo=(0*:d./1)]." // find all factors

math:       +-*/%
equality:   <=>
boolean:    ~&|
condition:  (:)
definition: {}
loopif:     []
string:     "
char:       '
here:       ^
fetch:      @
store:      !

TODO: Function definition, call and return
TODO: allot free -- are these forth words?
: allot ( size -- addr )
    \ look for block in free
    \ else
    \ make new block
    \ size,next,data
        \ get heap for block
    here @   ( size here )
    over 2 + ( size here size+2 )
    over +   ( size addr size+2+here )
    here !      ( size addr )
        \ fill in fields - size
    swap over ! ( addr )
        \ fill in fields - next
    dup 1+ 0 swap !  ( addr 0 addr' )

vi macros
    \d t)bywP
    \s t)bT bT df wP
    \o


TODO: input from STDIN
TODO: heap functions (byte, int, etc...)

m: T( => c
m: F( => s
cX(
cX:
cX)
